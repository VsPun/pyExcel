//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace pyExcel.Framework.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("pyExcel.Framework.Properties.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Изменение типа элементов в колонке Excel.
        /// </summary>
        internal static string CellTypeException {
            get {
                return ResourceManager.GetString("CellTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Для колонки [{1}], содержащейся на листе &quot;{0}&quot;, был установлен тип {2}. Строчка [{3}] содержит иной тип данных {4}..
        /// </summary>
        internal static string CellTypeExceptionDetailMessagePattern {
            get {
                return ResourceManager.GetString("CellTypeExceptionDetailMessagePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Конвертация данных уже запущена.
        /// </summary>
        internal static string ConvertIsRunningExceptionException {
            get {
                return ResourceManager.GetString("ConvertIsRunningExceptionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .syntaxhighlighter a,
        ///.syntaxhighlighter div,
        ///.syntaxhighlighter code,
        ///.syntaxhighlighter table,
        ///.syntaxhighlighter table td,
        ///.syntaxhighlighter table tr,
        ///.syntaxhighlighter table tbody,
        ///.syntaxhighlighter table thead,
        ///.syntaxhighlighter table caption,
        ///.syntaxhighlighter textarea {
        ///  -moz-border-radius: 0 0 0 0 !important;
        ///  -webkit-border-radius: 0 0 0 0 !important;
        ///  background: none !important;
        ///  border: 0 !important;
        ///  bottom: auto !important;
        ///  float: none !important;
        ///  height: auto !im [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string css_shCore {
            get {
                return ResourceManager.GetString("css_shCore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .syntaxhighlighter {
        ///  background-color: white !important;
        ///}
        ///.syntaxhighlighter .line.alt1 {
        ///  background-color: white !important;
        ///}
        ///.syntaxhighlighter .line.alt2 {
        ///  background-color: white !important;
        ///}
        ///.syntaxhighlighter .line.highlighted.alt1, .syntaxhighlighter .line.highlighted.alt2 {
        ///  background-color: #e0e0e0 !important;
        ///}
        ///.syntaxhighlighter .line.highlighted.number {
        ///  color: black !important;
        ///}
        ///.syntaxhighlighter table caption {
        ///  color: black !important;
        ///}
        ///.syntaxhighlighter .g [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string css_shThemeDefault {
            get {
                return ResourceManager.GetString("css_shThemeDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Исключение при работе с Microsoft.Office.Interop.Excel.
        /// </summary>
        internal static string ExcelExportException {
            get {
                return ResourceManager.GetString("ExcelExportException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to При экспорте в Excel возникло исключение:
        ///{0}.
        /// </summary>
        internal static string ExcelExportExceptionDetailMessagePattern {
            get {
                return ResourceManager.GetString("ExcelExportExceptionDetailMessagePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Не удалось найти файл.
        /// </summary>
        internal static string FileNotFoundException {
            get {
                return ResourceManager.GetString("FileNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Не удалось найти файл на диске:
        ///{0}.
        /// </summary>
        internal static string FileNotFoundExceptionDetailMessagePattern {
            get {
                return ResourceManager.GetString("FileNotFoundExceptionDetailMessagePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ошибка при задании начальной строчки с данными.
        /// </summary>
        internal static string FirstDataRowNumException {
            get {
                return ResourceManager.GetString("FirstDataRowNumException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ожидалось, что первая срока {0} будет из диапазона [{1} .. {2}].
        /// </summary>
        internal static string FirstDataRowNumExceptionDetailMessagePattern {
            get {
                return ResourceManager.GetString("FirstDataRowNumExceptionDetailMessagePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;
        ///&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot; lang=&quot;en&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;
        ///	&lt;title&gt;##PythonFileName##&lt;/title&gt;
        ///    &lt;script type=&quot;text/javascript&quot;&gt; &lt;!-- XRegExp is bundled with the final shCore.js during build --&gt;
        ///##XRegExp.js##
        ///##shCore.js##
        ///##shBrushJScript.js##
        ///##shBrushPython.js##
        ///    &lt;/script&gt;
        ///
        ///&lt;style type=&quot;text [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string html_template {
            get {
                return ResourceManager.GetString("html_template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ;(function()
        ///{
        ///	// CommonJS
        ///	typeof(require) != &apos;undefined&apos; ? SyntaxHighlighter = require(&apos;shCore&apos;).SyntaxHighlighter : null;
        ///
        ///	function Brush()
        ///	{
        ///		var keywords =	&apos;break case catch continue &apos; +
        ///						&apos;default delete do else false  &apos; +
        ///						&apos;for function if in instanceof &apos; +
        ///						&apos;new null return super switch &apos; +
        ///						&apos;this throw true try typeof var while with&apos;
        ///						;
        ///
        ///		var r = SyntaxHighlighter.regexLib;
        ///		
        ///		this.regexList = [
        ///			{ regex: r.multiLineDoubleQuotedString,					css: &apos;str [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string js_shBrushJScript {
            get {
                return ResourceManager.GetString("js_shBrushJScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ;(function()
        ///{
        ///	// CommonJS
        ///	typeof(require) != &apos;undefined&apos; ? SyntaxHighlighter = require(&apos;shCore&apos;).SyntaxHighlighter : null;
        ///
        ///	function Brush()
        ///	{
        ///		// Contributed by Gheorghe Milas and Ahmad Sherif
        ///	
        ///		var keywords =  &apos;and assert break class continue def del elif else &apos; +
        ///						&apos;except exec finally for from global if import in is &apos; +
        ///						&apos;lambda not or pass print raise return try yield while&apos;;
        ///
        ///		var funcs = &apos;__import__ abs all any apply basestring bin bool buffer callable &apos; +
        ///					&apos;chr cl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string js_shBrushPython {
            get {
                return ResourceManager.GetString("js_shBrushPython", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //
        ///// Begin anonymous function. This is used to contain local scope variables without polutting global scope.
        /////
        ///if (typeof(SyntaxHighlighter) == &apos;undefined&apos;) var SyntaxHighlighter = function() { 
        ///
        ///// CommonJS
        ///if (typeof(require) != &apos;undefined&apos; &amp;&amp; typeof(XRegExp) == &apos;undefined&apos;)
        ///{
        ///	XRegExp = require(&apos;XRegExp&apos;).XRegExp;
        ///}
        ///
        ///// Shortcut object which will be assigned to the SyntaxHighlighter variable.
        ///// This is a shorthand for local reference in order to avoid long namespace 
        ///// references to Synt [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string js_shCore {
            get {
                return ResourceManager.GetString("js_shCore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // XRegExp 1.5.0
        ///// (c) 2007-2010 Steven Levithan
        ///// MIT License
        ///// &lt;http://xregexp.com&gt;
        ///// Provides an augmented, extensible, cross-browser implementation of regular expressions,
        ///// including support for additional syntax, flags, and methods
        ///
        ///var XRegExp;
        ///
        ///if (XRegExp) {
        ///    // Avoid running twice, since that would break references to native globals
        ///    throw Error(&quot;can&apos;t load XRegExp twice in the same frame&quot;);
        ///}
        ///
        ///// Run within an anonymous function to protect variables and avoid new globals        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string js_XRegExp {
            get {
                return ResourceManager.GetString("js_XRegExp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ошибка при задании последней строчки с данными.
        /// </summary>
        internal static string LastDataRowNumException {
            get {
                return ResourceManager.GetString("LastDataRowNumException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ожидалось, что последняя срока {0} будет из диапазона [{1} .. {2}].
        /// </summary>
        internal static string LastDataRowNumExceptionDetailMessagePattern {
            get {
                return ResourceManager.GetString("LastDataRowNumExceptionDetailMessagePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Исключение при создании обработчика Python скриптов.
        /// </summary>
        internal static string PythonCreateRuntimeException {
            get {
                return ResourceManager.GetString("PythonCreateRuntimeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Не удалось создать обработчик для Python скриптов. Обратитесь к разработчику..
        /// </summary>
        internal static string PythonCreateRuntimeExceptionDetailMessage {
            get {
                return ResourceManager.GetString("PythonCreateRuntimeExceptionDetailMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Исключение при освобождении объекта.
        /// </summary>
        internal static string ReleaseObjectException {
            get {
                return ResourceManager.GetString("ReleaseObjectException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ошибка при освобождении объекта COM {0}.
        /// </summary>
        internal static string ReleaseObjectExceptionDetailMessagePattern {
            get {
                return ResourceManager.GetString("ReleaseObjectExceptionDetailMessagePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Исключение при выполнении Python метода.
        /// </summary>
        internal static string ScriptRunMethodException {
            get {
                return ResourceManager.GetString("ScriptRunMethodException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to В методе {0} возникло исключение:
        ///{1}.
        /// </summary>
        internal static string ScriptRunMethodExceptionPattern {
            get {
                return ResourceManager.GetString("ScriptRunMethodExceptionPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Исключение при использовании Python скрипта.
        /// </summary>
        internal static string ScriptRuntimeUseFileException {
            get {
                return ResourceManager.GetString("ScriptRuntimeUseFileException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Не удалось приступить к работе с Python скриптом..
        /// </summary>
        internal static string ScriptRuntimeUseFileExceptionDetailMessage {
            get {
                return ResourceManager.GetString("ScriptRuntimeUseFileExceptionDetailMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Лист1.
        /// </summary>
        internal static string SheetNameDefault {
            get {
                return ResourceManager.GetString("SheetNameDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Не удалось найти лист в Excel файлt.
        /// </summary>
        internal static string SheetNotFoundException {
            get {
                return ResourceManager.GetString("SheetNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excel файл {0} не содержит лист {1}.
        /// </summary>
        internal static string SheetNotFoundExceptionDetailMessagePattern {
            get {
                return ResourceManager.GetString("SheetNotFoundExceptionDetailMessagePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Исключение при запуске Python скрипта.
        /// </summary>
        internal static string ThreadConvertRunException {
            get {
                return ResourceManager.GetString("ThreadConvertRunException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Не удалось запустить выполнение Python:
        ///{0}.
        /// </summary>
        internal static string ThreadConvertRunExceptionDetailMessagePattern {
            get {
                return ResourceManager.GetString("ThreadConvertRunExceptionDetailMessagePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Исключение при остановке выполнения Python скрипта.
        /// </summary>
        internal static string ThreadConvertStopException {
            get {
                return ResourceManager.GetString("ThreadConvertStopException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Не удалось остановить выполнение Python:
        ///{0}.
        /// </summary>
        internal static string ThreadConvertStopExceptionDetailMessagePattern {
            get {
                return ResourceManager.GetString("ThreadConvertStopExceptionDetailMessagePattern", resourceCulture);
            }
        }
    }
}
